#!/bin/sh
# This script is sourced on build server, shebang is for convenience

# remember the build directory
ROOT_DIR=$PWD

# build the applications
mkdir -p build
cd build
cmake -DENABLE_ASAN=ON -DBUILD_FULL=OFF -DBUILD_SHARED=ON -DBUILD_STATIC=OFF -DBUILD_DOCUMENTATION=OFF -DPLUGINS='ALL;-fstab;-semlock' -DTOOLS='kdb;rest-backend;rest-frontend' -DCMAKE_C_FLAGS='-D_FORTIFY_SOURCE=2 -Werror=format-security -fstack-protector-strong -Wstack-protector -fPIE -pie' -DCMAKE_CXX_FLAGS='-D_FORTIFY_SOURCE=2 -Werror=format-security -fstack-protector-strong -Wstack-protector -fPIE -pie' -DCMAKE_EXE_LINKER_FLAGS='-Wl,-z,now -Wl,-z,relro' ..
make -j 3

# test the applications (TODO: external fails?)
#make run_all
ctest --output-on-failure -E external

# rotate backup of previous website
rm -rf /usr/local/share/elektra/tool_data_backup
cp -ra /usr/local/share/elektra/tool_data /usr/local/share/elektra/tool_data_backup

# if tests were ok, we can install
make install

# now lets first output some version information for the build log
kdb --version
# print key database for debugging
#kdb export / simpleini

# prevent jenkins from killing daemons
BUILD_ID=dontKillMe

# allow core dumps
ulimit -c unlimited

# place for core dumps (name by: echo "core_%t_%p" > /proc/sys/kernel/core_pattern)
cd /var/lib/jenkins

pstree
echo -n "Old PID was: "
cat /run/elektra-rest-backend.pid || /bin/true
echo

# then restart the backend
kdb stop-rest-backend

# avoid 'address already in use'
while netstat --listen --numeric-ports | grep "LISTEN" | grep "0.0.0.0:8080"
do
	sleep 1
done

kdb run-rest-backend

echo -n "New PID is: "
cat /run/elektra-rest-backend.pid || /bin/true
echo

# we have to make sure the backend had time to start before we can go on
# (necessary because the command `kdb run-rest-backend` runs in the background)
sleep 60

# and finally re-compile the frontend
# - the old frontend is still alive and does not get taken offline (not necessary)
# - the configuration script does also take care of deleting old files,
#   every configuration run will first clean the deployment directory and copy
#   required files afterwards, ensuring an always up-to-date deployment
kdb build-rest-frontend

# create and copy api description
ELEKTRA_VERSION=$(kdb get --no-newline system/elektra/version/constants/KDB_VERSION)
apiary preview --path=$ROOT_DIR/doc/api_blueprints/snippet-sharing.apib --output=/srv/libelektra/restapi/$ELEKTRA_VERSION/snippet-sharing.html
cp $ROOT_DIR/doc/api_blueprints/snippet-sharing.apib /srv/libelektra/restapi/$ELEKTRA_VERSION/snippet-sharing.apib
rm /srv/libelektra/restapi/current
ln -s /srv/libelektra/restapi/$ELEKTRA_VERSION /srv/libelektra/restapi/current

pstree
ulimit -a
