#!/bin/bash
# This script is sourced on build server, shebang is for convenience
# bash is used to have a predictable ulimit behavior

set -e
set -x

# remember the build directory
ROOT_DIR=$PWD

# build the applications
mkdir -p build
cd build

INSTALL_PATH="/usr/local/elektra_backend"

C_FLAGS='-D_FORTIFY_SOURCE=2 -Wformat -Werror=format-security -fstack-protector-strong -Wstack-protector -fPIE -pie'
LD_FLAGS='-Wl,-z,now -Wl,-z,relro'

cmake -DENABLE_ASAN=ON -DBUILD_FULL=OFF -DBUILD_SHARED=ON -DBUILD_STATIC=OFF -DBUILD_DOCUMENTATION=OFF \
	-DCMAKE_INSTALL_PREFIX="${INSTALL_PATH}"  -DINSTALL_SYSTEM_FILES=OFF \
        -DPLUGINS='ALL;-fstab;-semlock;file;-xerces' \
        -DTOOLS='kdb;rest-backend;rest-frontend' \
        -DCMAKE_C_FLAGS="$C_FLAGS" \
        -DCMAKE_CXX_FLAGS="$C_FLAGS" \
        -DCMAKE_EXE_LINKER_FLAGS="$LD_FLAGS" \
        ..

make -j 3

# run tests (exclude tests which write in system paths)
make run_nokdbtests

# rotate backup of previous website
rm -rf /usr/local/share/elektra/tool_data_backup
cp -ra /usr/local/share/elektra/tool_data /usr/local/share/elektra/tool_data_backup

# if tests were ok, we can install
make install


# use installed binaries and libs
export PATH=${INSTALL_PATH}/bin:${PATH}
export LD_LIBRARY_PATH=${INSTALL_PATH}/lib

# now lets first output some version information for the build log
kdb --version

# print key database for debugging
#kdb export / simpleini

# prevent jenkins from killing daemons
BUILD_ID=dontKillMe

# allow core dumps
ulimit -c unlimited

# place for core dumps (name by: echo "core_%t_%p" > /proc/sys/kernel/core_pattern)
cd /var/lib/jenkins

pstree
printf "Old PID was: "
cat /run/elektra-rest-backend.pid || /bin/true
echo


IP=`kdb sget /sw/elektra/restbackend/#0/current/cppcms/service/ip 127.0.0.1`
PORT=`kdb sget /sw/elektra/restbackend/#0/current/cppcms/service/port 8080`

echo "The backend should running on $IP:$PORT"

netstat -tlpen


# then start the backend; succeed if it was not started before..
kdb stop-rest-backend || /bin/true

# cleanup /tmp files from build
find /tmp -mindepth 1 -delete

# avoid 'address already in use'
while netstat -tlpen | grep "$IP:$PORT"
do
	sleep 1  # keep waiting (=downtime) short
done

# now start again
kdb run-rest-backend

printf "New PID is: "
cat /run/elektra-rest-backend.pid || /bin/true
echo

netstat -tlpen

# and finally re-compile the frontend
# - the old frontend is still alive and does not get taken offline (not necessary)
# - the configuration script does also take care of deleting old files,
#   every configuration run will first clean the deployment directory and copy
#   required files afterwards, ensuring an always up-to-date deployment
kdb build-rest-frontend

# create and copy api description
ELEKTRA_VERSION=$(kdb get --no-newline system/elektra/version/constants/KDB_VERSION)
apiary preview --path=$ROOT_DIR/doc/api_blueprints/snippet-sharing.apib --output=/srv/libelektra/restapi/$ELEKTRA_VERSION/snippet-sharing.html
cp $ROOT_DIR/doc/api_blueprints/snippet-sharing.apib /srv/libelektra/restapi/$ELEKTRA_VERSION/snippet-sharing.apib
rm /srv/libelektra/restapi/current
ln -s /srv/libelektra/restapi/$ELEKTRA_VERSION /srv/libelektra/restapi/current

pstree
ulimit -a
