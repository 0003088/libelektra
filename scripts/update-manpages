#!/bin/bash
#
# @author Ren√© Schwaiger <sanssecours@me.com>
# @brief Generate man pages via ronn and copy them to the repository
# @date 16.10.2017
# @tags generator, helper

# =============
# = Functions =
# =============

cleanup() {
        printf 'üëã  Change back to original directory ‚Äú%s‚Äù\n' "$CURRENT_DIR"
        cd "$CURRENT_DIR" || exit
}

# ========
# = Init =
# ========

SCRIPTS_DIR=$(dirname "$0")
. "${SCRIPTS_DIR}/include-common"

CURRENT_DIR="$PWD"

BUILD_DIR="$SOURCE/build"
CMAKE_CACHE="$BUILD_DIR/CMakeCache.txt"
MANPAGES_INPUT_DIR="$BUILD_DIR/doc/help"
MANPAGES_OUTPUT_DIR="$SOURCE/doc/man"

command -v ronn >/dev/null 2>&1 || { printf 'Unable to locate ronn' >&2; exit 1; }
command -v make >/dev/null 2>&1 || { printf 'Unable to locate Make' >&2; exit 1; }
command -v cmake >/dev/null 2>&1 || { printf 'Unable to locate CMake' >&2; exit 1; }

mkdir -p "$BUILD_DIR" || { printf 'Unable to create ‚Äú%s‚Äù' "$BUILD_DIR" >&2; exit 1; }

# ========
# = Main =
# ========

printf 'üëã  Change into build directory ‚Äú%s‚Äù\n' "$BUILD_DIR"
cd "$BUILD_DIR" || exit

if ! grep -E -q "BUILD_DOCUMENTATION.+(ON|YES)" "$CMAKE_CACHE"; then
        printf 'üîç  Run CMake\n'
        cmake -DBUILD_DOCUMENTATION=ON -DTOOLS='ALL' -DBINDINGS='ALL' -DPLUGINS='ALL' ..
fi

printf 'üìô  Build Elektra and its documentation\n'
make -j9 || ninja || { printf 'Unable to build Elektra' >&2; cleanup; exit 1; }

printf 'üìë  Copy man pages\n'
mkdir -p "$MANPAGES_OUTPUT_DIR" || { printf 'Unable to create ‚Äú%s‚Äù' "$MANPAGES_OUTPUT_DIR" >&2; cleanup; exit 1; }
find -E "$MANPAGES_INPUT_DIR" -regex '.+\.[0-9]$' -exec cp '{}' "$MANPAGES_OUTPUT_DIR" \;

cleanup
