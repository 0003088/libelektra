/**
 * @file
 *
 * @brief stylesheet for the TreeView
 *
 * @copyright BSD License (see LICENSE.md or https://www.libelektra.org)
 */

/* Elements */
.ExplorerView ul {
  list-style: none;
  font-size: 14px;
  padding-top: 4px;
}
.ExplorerView ul > li {
  min-height: 22px;
}
.ExplorerView ul > li:before {
  display: block;
  float: left;
  content: "";
  height: 1em;
  width: 2em;
  background-position: center;
  background-repeat: no-repeat;
  mask: url('/item.svg') no-repeat;
  margin-top: 7px;
}
.ExplorerView ul > li > span.item {}
.ExplorerView > input[type="search"] {}

/* Root list */
.ExplorerView ul.depth-0 {}

/* Not disabled */
.ExplorerView ul li:not(.disabled) {}
.ExplorerView ul li:not(.disabled) > span.item {}

/* Selected */
.ExplorerView ul li.selected {}
.ExplorerView ul li.selected:before {
  background-color: #00BCD4;
}
.ExplorerView ul li:not(.selected):before {
  background-color: #000000;
}
.ExplorerView ul li.selected > span.item {
  color: #00BCD4;
}

/* Categories : Nodes with children */
.ExplorerView ul li.category {}
.ExplorerView ul li.category > span.item {}
/* Folded */
.ExplorerView ul li.category.folded:before {
  mask: url('/folded.svg') no-repeat;
  margin-top: 2px;
}
.ExplorerView ul li.category.folded {}
.ExplorerView ul li.category.folded > span.item {}
/* Unfolded */
.ExplorerView ul li.category:not(.folded):before {
  mask: url('/unfolded.svg') no-repeat;
  margin-top: 5px;
}
.ExplorerView ul li.category:not(.folded) {
  margin-bottom: 14px;
}
.ExplorerView ul li.category:not(.folded) > span.item {}
/* Opener */
.ExplorerView ul li.category > span.item > .opener {}
.ExplorerView ul li.category > span.item > .opener::after {}
/* Folded async */
.ExplorerView li.category.async {}
.ExplorerView li.category.async > span.item {}
/* Loading async */
.ExplorerView li.category.loading {}
.ExplorerView li.category.loading > span.item {}

/* Animations on component creation / destruction */
.ExplorerViewTransition-enter {}
.ExplorerViewTransition-enter-active {}
.ExplorerViewTransition-leave {}
.ExplorerViewTransition-leave-active {}

/* Drag'n'drop */
.ExplorerView ul.dragover {}
.ExplorerView li.dragover {}
.ExplorerView li.dragover > span.item {}
.ExplorerView li.nodrop {}
.ExplorerView li.nodrop > span.item {}
