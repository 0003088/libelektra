bsd_task:
  matrix:

    - name: 😈 FreeBSD 11
      freebsd_instance:
        image: freebsd-11-2-release-amd64

    - name: 😈 FreeBSD 12
      freebsd_instance:
        image: freebsd-12-0-release-amd64

  install_script:
    - >
      pkg install -y
      cmake
      git
      ninja
      yajl

  script:
    - mkdir build && cd build
    - cmake -GNinja -DPLUGINS=ALL -DBINDINGS=ALL -DTARGET_PLUGIN_FOLDER='' -DCMAKE_SKIP_INSTALL_RPATH=ON ..
    - ninja
    - output="$(ninja install 2>&1)" || printf '%s' "$output"

  tests_script:
    # Work around stalled process plugin and library problems on FreeBSD: https://issues.libelektra.org/2323
    - sudo mount -t fdescfs fdesc /dev/fd
    - cd build && ninja run_all
    - kdb run_all

mac_task:
  matrix:

    - name: 🍎 macOS
      osx_instance:
        image: mojave-xcode-10.1

  install_script:
    - > # Add external Homebrew taps
      brew tap sanssecours/yaep
    - > # Install Homebrew casks
      brew cask install java oclint
    - > # Install Homebrew formulas
      brew install
      antlr
      antlr4-cpp-runtime
      augeas
      bison
      boost
      botan
      cmake
      dbus
      discount
      doxygen
      glib
      gpgme
      graphviz
      libev
      libgcrypt
      libgit2
      libuv
      llvm
      lua
      maven
      moreutils
      ninja
      openssl
      pegtl
      pkg-config
      qt
      shfmt
      swig
      xerces-c
      yaep
      yajl
      yaml-cpp
      zeromq
    - > # Try to install `checkbashisms` (The file server that hosts the package is unfortunately quite unreliable.)
      brew install checkbashisms || >&2 printf 'Warning: Unable to install `checkbashims`\n'
    - > # Start D-Bus session bus
      brew services start dbus
    - | # Install Python
      brew install python@2; brew link --overwrite python@2
      brew install python || brew upgrade python
    - | # Install Python packages
      pip install cmake-format pyyaml
    - | # Install Ruby
      brew install ruby@2.5
      export PATH="/usr/local/opt/ruby@2.5/bin:$PATH"
    - | # Install Ruby gems
      gem install ronn test-unit --user-install --no-document

  script:
    - |
      export PATH="/usr/local/opt/ruby@2.5/bin:$PATH"
      export PATH="$HOME/.gem/ruby/$(ruby -e 'puts RUBY_VERSION' | sed 's/\.[0-9]$/.0/')/bin:$PATH"
    - > # Use latest version of LLVM to translate Elektra
      export CC=/usr/local/opt/llvm/bin/clang CXX=/usr/local/opt/llvm/bin/clang++
    - SYSTEM_DIR="$PWD/kdbsystem"
    - mkdir build && cd build
    - >
      cmake
      -GNinja
      -DPLUGINS=ALL
      -DBINDINGS=ALL
      -DTOOLS=ALL
      -DCOMMON_FLAGS=-Werror
      -DKDB_DB_SYSTEM="$SYSTEM_DIR" ..
    - ninja
    - output="$(ninja install 2>&1)" || printf '%s' "$output"

  tests_script:
    - cd build && ninja run_all
    - kdb run_all
